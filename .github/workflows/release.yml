name: Release Simple API

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Matches 1.0.0, 2.1.3, etc.
      - 'v[0-9]+.[0-9]+.[0-9]+'  # Matches v1.0.0, v2.1.3, etc.

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Get version from tag
      id: get_version
      run: |
        # Remove 'v' prefix if present
        VERSION=${GITHUB_REF_NAME#v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Tag version: $VERSION"
        
    - name: Install module dependencies
      working-directory: ./module
      run: npm install
        
    - name: Build package
      working-directory: ./module
      run: npm run package
        
    - name: Verify files exist
      run: |
        echo "Checking for required files..."
        ls -la module/release/
        if [ ! -f "module/release/module.json" ]; then
          echo "ERROR: module.json not found!"
          exit 1
        fi
        if [ ! -f "module/release/module.zip" ]; then
          echo "ERROR: module.zip not found!"
          exit 1
        fi
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Simple API v${{ steps.get_version.outputs.VERSION }}
        body: |
          # Simple API for Foundry VTT v${{ steps.get_version.outputs.VERSION }}
          
          ## Installation
          
          Add this URL to Foundry VTT's module installer:
          ```
          https://github.com/${{ github.repository }}/releases/latest/download/module.json
          ```
          
          ## What's Changed
          See [commit history](https://github.com/${{ github.repository }}/commits/${{ github.ref_name }}) for details.
        draft: false
        prerelease: false
        
    - name: Upload module.json
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./module/release/module.json
        asset_name: module.json
        asset_content_type: application/json
        
    - name: Upload module.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./module/release/module.zip
        asset_name: module.zip
        asset_content_type: application/zip